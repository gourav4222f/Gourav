// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

// Enum definitions for controlled vocabularies
enum ProjectStatus {
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}

enum ProjectType {
  PERSONAL
  CLIENT
}

// Model for Admin User Authentication
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Model for Work Experience
model Experience {
  id          String   @id @default(cuid())
  jobTitle    String
  company     String
  startDate   String
  endDate     String
  description String[] // For bullet points from your resume
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Model for Projects, designed for detailed case studies
model Project {
  id                String   @id @default(cuid())
  title             String   @unique
  slug              String   @unique // For URL: /projects/my-awesome-project
  thumbnailUrl      String   // Main image for project grids
  shortDescription  String   // A one-liner for cards
  content           String   // Detailed case study content in Markdown
  
  status            ProjectStatus @default(COMPLETED)
  projectType       ProjectType   @default(PERSONAL)

  liveUrl           String?
  codeUrl           String?
  
  tags              String[] // Tech used, e.g., ["Next.js", "Prisma"]
  order             Int      @default(0)
  isFeatured        Boolean  @default(false) // To feature on homepage

  images            ProjectImage[] // Gallery of images for the project page

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// A separate model for a gallery of project images
model ProjectImage {
  id        String   @id @default(cuid())
  url       String
  altText   String   // Important for SEO and accessibility
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  order     Int      @default(0)
}

// Model for Skills, categorized and with optional icons
model Skill {
  id        String   @id @default(cuid())
  name      String
  category  String   // "frontend", "backend", "concepts", "tools"
  icon      String?  // Optional: For displaying logos (e.g., SVG name or URL)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}